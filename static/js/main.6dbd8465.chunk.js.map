{"version":3,"sources":["assets/ico/ic_totais.svg","atoms/Button.jsx","atoms/SvgFill.jsx","molecules/Menu.jsx","molecules/Breadcrumb.jsx","templates/ContentArea.jsx","molecules/Filter.jsx","util/index.js","organisms/Totais/GraphSubtitle.jsx","organisms/Totais/GraphServicos.jsx","organisms/chartjs/RoundedBar.jsx","organisms/Totais/GraphReceitasDespesas.jsx","organisms/Totais/index.js","organisms/Totais/Totais.jsx","pages/Faturamento.jsx","pages/App.jsx","serviceWorker.js","index.js","assets/ico/ic_menu.svg","assets/ico/ic_logo.svg","assets/ico/ic_dashboard.svg","assets/ico/ic_cadastro.svg","assets/ico/ic_clientes.svg"],"names":["module","exports","__webpack_require__","p","Button","props","caption","icon","className","otherProps","Object","objectWithoutProperties","active","css","classNames","react_default","a","createElement","assign","type","src","alt","SgvFill","_ref","path","fill","react_svgmt","selector","Menu","items","main","itemClass","fillActive","fillNormal","menu--main","menu--inner","cssBtn","menu__button--main","cssItem","menu__item--main","menu__item--inner","map","it","SvgFill","i","menu__button--active","key","atoms_Button","defaultProps","Breadcrumb","ic_menu","join","split","item","ContentArea","menu","content","fluid","cssRoot","cssContainer","container","container-fluid","Filter","name","filter__button--active","options","moneyFormat","arguments","length","undefined","toLocaleString","style","currency","GraphSubtitle","label","value","ic_totais","SERVICOS_COLORS","cutoutPercentage","legend","display","GraphServicos","es","Chart","helpers","drawRoundedTopRectangle","ctx","x","y","width","height","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","elements","RoundedTopRectangle","Rectangle","extend","draw","left","right","top","bottom","signX","signY","borderSkipped","this","_chart","vm","_view","borderWidth","horizontal","base","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","barWidth","prevTop","barRadius","config","barRoundness","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","stroke","defaults","roundedBar","clone","bar","controllers","dataElementType","RoundedBar","_this","ref","chartInstance","React","Component","responsive","aspectRatio","scales","xAxes","gridLines","drawBorder","barPercentage","ticks","yAxes","afterBuildTicks","chart","shift","stepSize","callback","concat","GraphReceitasDespesas","data","labels","datasets","receitas","despesas","chartjs_RoundedBar","Totais","totalReceitas","r","valor","reduce","acc","v","servicosSub","servicosData","categoria","toUpperCase","percent","color","push","Totais_GraphSubtitle","Totais_GraphServicos","Totais_GraphReceitasDespesas","RECEITAS","Faturamento","ic_clientes","Fragment","molecules_Filter","molecules_Menu","templates_ContentArea","organisms_Totais","App","ic_logo","ic_dashboard","ic_cadastro","molecules_Breadcrumb","pages_Faturamento","Boolean","window","location","hostname","match","ReactDOM","render","pages_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6dbd8465.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ic_totais.82ced422.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst Button = props => {\r\n  const { caption, icon, className, ...otherProps } = props;\r\n  delete otherProps.active;\r\n\r\n  const css = classNames('button', className);\r\n\r\n  return (\r\n    <button type=\"button\" className={css} {...otherProps}>\r\n      {icon && (typeof icon === 'string' ? <img src={icon} alt=\"\" /> : icon)}\r\n      {caption && <span>{caption}</span>}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  caption: PropTypes.string,\r\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { SvgLoader, SvgProxy } from 'react-svgmt';\r\n\r\nconst SgvFill = ({ path, fill }) => (\r\n  <SvgLoader path={path}>\r\n    <SvgProxy selector=\"#Tela-01-Dashboard-Checkout\" fill={fill} />\r\n  </SvgLoader>\r\n);\r\n\r\nSgvFill.propTypes = {\r\n  path: PropTypes.string.isRequired,\r\n  fill: PropTypes.string.isRequired\r\n};\r\n\r\nexport default SgvFill;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport Button from '../atoms/Button';\r\nimport SvgFill from '../atoms/SvgFill';\r\n\r\nconst Menu = props => {\r\n  const {\r\n    items,\r\n    main,\r\n    icon,\r\n    className,\r\n    itemClass,\r\n    fillActive,\r\n    fillNormal\r\n  } = props;\r\n\r\n  const css = classNames(\r\n    'menu',\r\n    { 'menu--main': main },\r\n    { 'menu--inner': !main },\r\n    className\r\n  );\r\n  const cssBtn = classNames('menu__button', { 'menu__button--main': main });\r\n  const cssItem = classNames(\r\n    'menu__item',\r\n    { 'menu__item--main': main },\r\n    { 'menu__item--inner': !main },\r\n    itemClass\r\n  );\r\n\r\n  return (\r\n    <nav className={css}>\r\n      <ul className=\"list-unstyled components\">\r\n        {icon && (\r\n          <li className=\"menu__icon\">\r\n            <img src={icon} alt=\"\" />\r\n          </li>\r\n        )}\r\n        {items\r\n          .map(it => (typeof it === 'string' ? { caption: it } : it))\r\n          .map(it => {\r\n            if (!it.icon || typeof it.icon !== 'string') {\r\n              return it;\r\n            }\r\n\r\n            if (it.active && fillActive) {\r\n              it.icon = <SvgFill path={it.icon} fill={fillActive} />;\r\n            } else if (!it.active && fillNormal) {\r\n              it.icon = <SvgFill path={it.icon} fill={fillNormal} />;\r\n            }\r\n\r\n            return it;\r\n          })\r\n          .map((it, i) => {\r\n            const { active, className } = it;\r\n            const css = classNames(\r\n              cssBtn,\r\n              { 'menu__button--active': active },\r\n              className\r\n            );\r\n\r\n            return (\r\n              <li key={i} className={cssItem}>\r\n                <Button {...it} className={css} />\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nMenu.defaultProps = {\r\n  main: false,\r\n  items: []\r\n};\r\n\r\nMenu.propTypes = {\r\n  main: PropTypes.bool,\r\n  icon: PropTypes.string,\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.shape({\r\n        caption: PropTypes.string,\r\n        icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n        active: PropTypes.bool\r\n      })\r\n    ])\r\n  ).isRequired,\r\n  itemClass: PropTypes.string,\r\n  fillActive: PropTypes.string,\r\n  fillNormal: PropTypes.string\r\n};\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport Button from '../atoms/Button';\r\nimport ic_menu from '../assets/ico/ic_menu.svg';\r\n\r\nconst Breadcrumb = props => {\r\n  const { items, className } = props;\r\n  const css = classNames('breadcrumb', 'bc__nav', className);\r\n\r\n  return (\r\n    <nav className={css}>\r\n      <ol className=\"breadcrumb bc__list\">\r\n        <li className=\"bc__icon d-inline-block d-lg-none\">\r\n          <Button icon={ic_menu} />\r\n        </li>\r\n        {items\r\n          .join('_|_')\r\n          .split('_')\r\n          .map((item, i) => (\r\n            <li key={i} className=\"breadcrumb-item bc__item\">\r\n              {item}\r\n            </li>\r\n          ))}\r\n      </ol>\r\n    </nav>\r\n  );\r\n};\r\n\r\nBreadcrumb.defaultProps = {\r\n  items: []\r\n};\r\n\r\nBreadcrumb.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst ContentArea = props => {\r\n  const { menu, content, fluid, className } = props;\r\n\r\n  const cssRoot = classNames('content-area', className);\r\n  const cssContainer = classNames(\r\n    { container: !fluid },\r\n    { 'container-fluid': fluid }\r\n  );\r\n\r\n  return (\r\n    <div className={cssRoot}>\r\n      {menu}\r\n      <div className={cssContainer}>\r\n        <div className=\"row\">\r\n          <div className=\"col content-area__content\">{content}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nContentArea.propTypes = {\r\n  menu: PropTypes.node,\r\n  content: PropTypes.node.isRequired,\r\n  fluid: PropTypes.bool\r\n};\r\n\r\nexport default ContentArea;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport Button from '../atoms/Button';\r\n\r\nconst Filter = props => {\r\n  const { items, className } = props;\r\n  const css = classNames('filter', className);\r\n\r\n  return (\r\n    <nav className={css}>\r\n      <ol className=\"list-unstyled components filter__list\">\r\n        {items\r\n          .map(it => (typeof it === 'string' ? { name: it } : it))\r\n          .map((it, i) => {\r\n            const { active, className } = it;\r\n            const css = classNames(\r\n              'filter__button',\r\n              { 'filter__button--active': active },\r\n              className\r\n            );\r\n\r\n            return (\r\n              <li key={i} className=\"filter__item\">\r\n                <Button className={css} caption={it.name} />\r\n              </li>\r\n            );\r\n          })}\r\n      </ol>\r\n    </nav>\r\n  );\r\n};\r\n\r\nFilter.defaultProps = {\r\n  options: []\r\n};\r\n\r\nFilter.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        active: PropTypes.bool\r\n      })\r\n    ])\r\n  ).isRequired\r\n};\r\n\r\nexport default Filter;\r\n","export const moneyFormat = (value = 0) =>\r\n  value.toLocaleString('pt-br', {\r\n    style: 'currency',\r\n    currency: 'BRL'\r\n  });\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport SvgFill from '../../atoms/SvgFill';\r\nimport ic_totais from '../../assets/ico/ic_totais.svg';\r\n\r\nconst GraphSubtitle = props => {\r\n  const { label, value, fill, className, ...otherProps } = props;\r\n  const css = classNames('row', 'graph__subtitle', className);\r\n\r\n  return (\r\n    <div className={css} {...otherProps}>\r\n      <div className=\"col\">\r\n        {fill && <SvgFill path={ic_totais} fill={fill} />}\r\n        <span className=\"graph__label\">{label}</span>\r\n      </div>\r\n      <div className=\"col graph__value\">{value}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nGraphSubtitle.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  fill: PropTypes.string,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default GraphSubtitle;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nexport const SERVICOS_COLORS = ['#cc28d4', '#792ad5', '#3a86fe'];\r\n\r\nconst options = {\r\n  cutoutPercentage: 75,\r\n\r\n  legend: {\r\n    display: false\r\n  }\r\n};\r\n\r\nconst GraphServicos = props => <Doughnut options={options} {...props} />;\r\n\r\nGraphServicos.propTypes = {\r\n  data: PropTypes.object.isRequired\r\n};\r\n\r\nexport default GraphServicos;\r\n","import React from 'react';\r\nimport { Chart } from 'chart.js';\r\nimport ChartComponent from 'react-chartjs-2';\r\n\r\n/*\r\n  Cria um gráfico de barras com o topo arredondado.\r\n  Para isso, adiciona métodos auxiliares ao 'Chart' (chart.js) diretamente, criando\r\n  na prática um novo tipo de gráfico.\r\n\r\n  No final, cria e exporta o componente 'RoundedBar', seguindo o mesmo padrão usado\r\n  na biblioteca 'react-chartjs-2'\r\n\r\n  Código original extraído de :\r\n  - https://stackoverflow.com/questions/43254153/how-to-create-rounded-bars-for-bar-chart-js-v2/43281198#43281198\r\n\r\n*/\r\n\r\n// draws a rectangle with a rounded top\r\nChart.helpers.drawRoundedTopRectangle = function(\r\n  ctx,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius\r\n) {\r\n  ctx.beginPath();\r\n  ctx.moveTo(x + radius, y);\r\n  // top right corner\r\n  ctx.lineTo(x + width - radius, y);\r\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n  // bottom right   corner\r\n  ctx.lineTo(x + width, y + height);\r\n  // bottom left corner\r\n  ctx.lineTo(x, y + height);\r\n  // top left\r\n  ctx.lineTo(x, y + radius);\r\n  ctx.quadraticCurveTo(x, y, x + radius, y);\r\n  ctx.closePath();\r\n};\r\n\r\nChart.elements.RoundedTopRectangle = Chart.elements.Rectangle.extend({\r\n  draw: function() {\r\n    var ctx = this._chart.ctx;\r\n    var vm = this._view;\r\n    var left, right, top, bottom, signX, signY, borderSkipped;\r\n    var borderWidth = vm.borderWidth;\r\n\r\n    if (!vm.horizontal) {\r\n      // bar\r\n      left = vm.x - vm.width / 2;\r\n      right = vm.x + vm.width / 2;\r\n      top = vm.y;\r\n      bottom = vm.base;\r\n      signX = 1;\r\n      signY = bottom > top ? 1 : -1;\r\n      borderSkipped = vm.borderSkipped || 'bottom';\r\n    } else {\r\n      // horizontal bar\r\n      left = vm.base;\r\n      right = vm.x;\r\n      top = vm.y - vm.height / 2;\r\n      bottom = vm.y + vm.height / 2;\r\n      signX = right > left ? 1 : -1;\r\n      signY = 1;\r\n      borderSkipped = vm.borderSkipped || 'left';\r\n    }\r\n\r\n    // Canvas doesn't allow us to stroke inside the width so we can\r\n    // adjust the sizes to fit if we're setting a stroke on the line\r\n    if (borderWidth) {\r\n      // borderWidth shold be less than bar width and bar height.\r\n      var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n      borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n      var halfStroke = borderWidth / 2;\r\n      // Adjust borderWidth when bar top position is near vm.base(zero).\r\n      var borderLeft =\r\n        left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n      var borderRight =\r\n        right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n      var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n      var borderBottom =\r\n        bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n      // not become a vertical line?\r\n      if (borderLeft !== borderRight) {\r\n        top = borderTop;\r\n        bottom = borderBottom;\r\n      }\r\n      // not become a horizontal line?\r\n      if (borderTop !== borderBottom) {\r\n        left = borderLeft;\r\n        right = borderRight;\r\n      }\r\n    }\r\n\r\n    // calculate the bar width and roundess\r\n    var barWidth = Math.abs(left - right);\r\n    var roundness = this._chart.config.options.barRoundness || 0.5;\r\n    var radius = barWidth * roundness * 0.5;\r\n\r\n    // keep track of the original top of the bar\r\n    var prevTop = top;\r\n\r\n    // move the top down so there is room to draw the rounded top\r\n    top = prevTop + radius;\r\n    var barRadius = top - prevTop;\r\n\r\n    ctx.beginPath();\r\n    ctx.fillStyle = vm.backgroundColor;\r\n    ctx.strokeStyle = vm.borderColor;\r\n    ctx.lineWidth = borderWidth;\r\n\r\n    // draw the rounded top rectangle\r\n    Chart.helpers.drawRoundedTopRectangle(\r\n      ctx,\r\n      left,\r\n      top - barRadius + 1,\r\n      barWidth,\r\n      bottom - prevTop,\r\n      barRadius\r\n    );\r\n\r\n    ctx.fill();\r\n    if (borderWidth) {\r\n      ctx.stroke();\r\n    }\r\n\r\n    // restore the original top value so tooltips and scales still work\r\n    top = prevTop;\r\n  }\r\n});\r\n\r\nChart.defaults.roundedBar = Chart.helpers.clone(Chart.defaults.bar);\r\n\r\nChart.controllers.roundedBar = Chart.controllers.bar.extend({\r\n  dataElementType: Chart.elements.RoundedTopRectangle\r\n});\r\n\r\nclass RoundedBar extends React.Component {\r\n  render() {\r\n    return (\r\n      <ChartComponent\r\n        {...this.props}\r\n        ref={ref => (this.chartInstance = ref && ref.chartInstance)}\r\n        type=\"roundedBar\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoundedBar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { moneyFormat } from '../../util/';\r\nimport RoundedBar from '../chartjs/RoundedBar';\r\n\r\nexport const COR_RECEITA = '#00ddaa';\r\nexport const COR_DESPESA = '#ff4f64';\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false\r\n  },\r\n  responsive: true,\r\n  aspectRatio: 1.7,\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n          drawBorder: false\r\n        },\r\n        barPercentage: 0.3,\r\n        ticks: {\r\n          display: false\r\n        }\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          drawBorder: false\r\n        },\r\n        afterBuildTicks: chart => {\r\n          chart.ticks.shift();\r\n        },\r\n        ticks: {\r\n          min: 2000,\r\n          stepSize: 2000,\r\n          callback: value => `${moneyFormat(value)}  `\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  barRoundness: 1\r\n};\r\n\r\nconst GraphReceitasDespesas = props => {\r\n  const { receitas, despesas } = props;\r\n\r\n  const data = {\r\n    labels: ['Receitas', 'Despesas'],\r\n    datasets: [\r\n      {\r\n        data: [receitas, despesas],\r\n        backgroundColor: [COR_RECEITA, COR_DESPESA]\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <RoundedBar\r\n      data={data}\r\n      options={options}\r\n      width={null}\r\n      height={null}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nGraphReceitasDespesas.propTypes = {\r\n  receitas: PropTypes.number.isRequired,\r\n  despesas: PropTypes.number.isRequired\r\n};\r\n\r\nexport default GraphReceitasDespesas;\r\n","import Totais from './Totais';\r\n\r\nexport default Totais;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { moneyFormat } from '../../util';\r\n\r\nimport GraphSubtitle from './GraphSubtitle';\r\nimport GraphServicos, { SERVICOS_COLORS } from './GraphServicos';\r\nimport GraphReceitasDespesas, {\r\n  COR_RECEITA,\r\n  COR_DESPESA\r\n} from './GraphReceitasDespesas';\r\n\r\nconst Totais = props => {\r\n  const { receitas, despesas } = props;\r\n\r\n  const totalReceitas = receitas\r\n    .map(r => r.valor)\r\n    .reduce((acc, v) => acc + v, 0);\r\n\r\n  const servicosSub = [];\r\n  const servicosData = receitas.reduce(\r\n    (acc, r, i) => {\r\n      const label = r.categoria.toUpperCase();\r\n      const percent = (r.valor / totalReceitas) * 100;\r\n      const value = `${moneyFormat(r.valor)} (${percent}%)`;\r\n      const color = SERVICOS_COLORS[i % SERVICOS_COLORS.length];\r\n\r\n      acc.labels.push(label);\r\n      acc.datasets[0].data.push(r.valor);\r\n      acc.datasets[0].backgroundColor.push(color);\r\n\r\n      servicosSub.push(\r\n        <GraphSubtitle key={i} label={label} value={value} fill={color} />\r\n      );\r\n\r\n      return acc;\r\n    },\r\n    { labels: [], datasets: [{ data: [], backgroundColor: [] }] }\r\n  );\r\n\r\n  return (\r\n    <div className=\"container pl-1 pr-1\">\r\n      <div className=\"row\">\r\n        <div className=\"col spotlight\">\r\n          <span className=\"title\">Valor total</span>\r\n          <span className=\"spotlight__currency\">R$</span>\r\n          <span className=\"spotlight__amount\">10.178,60</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col col-xl-6 pl-lg-5 pr-lg-5 graph\">\r\n          <span className=\"title\">Serviços</span>\r\n          <div className=\"graph__container graph__container--circle\">\r\n            <GraphServicos data={servicosData} />\r\n          </div>\r\n          {servicosSub}\r\n          <GraphSubtitle\r\n            className=\"graph__subtitle--total\"\r\n            label=\"Total\"\r\n            value={`${moneyFormat(totalReceitas)} (100%)`}\r\n          />\r\n        </div>\r\n        <div className=\"col col-xl-6 pl-lg-5 pr-lg-5 graph\">\r\n          <span className=\"title\">Despesas x Receitas</span>\r\n          <div className=\"graph__container graph__container--bar\">\r\n            <GraphReceitasDespesas\r\n              receitas={totalReceitas}\r\n              despesas={despesas}\r\n            />\r\n          </div>\r\n          <GraphSubtitle\r\n            label=\"RECEITAS\"\r\n            value={`${moneyFormat(totalReceitas)} (50%)`}\r\n            fill={COR_RECEITA}\r\n          />\r\n          <GraphSubtitle\r\n            label=\"DESPESAS\"\r\n            value={`${moneyFormat(despesas)} (30%)`}\r\n            fill={COR_DESPESA}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTotais.propTypes = {\r\n  receitas: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      categoria: PropTypes.string.isRequired,\r\n      valor: PropTypes.number.isRequired\r\n    })\r\n  ).isRequired,\r\n  despesas: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Totais;\r\n","import React from 'react';\r\n\r\nimport Filter from '../molecules/Filter';\r\nimport Menu from '../molecules/Menu';\r\nimport Totais from '../organisms/Totais';\r\nimport ContentArea from '../templates/ContentArea';\r\nimport ic_totais from '../assets/ico/ic_totais.svg';\r\nimport ic_clientes from '../assets/ico/ic_clientes.svg';\r\n\r\nconst RECEITAS = [\r\n  { categoria: 'Banho & tosa', valor: 6445.25 },\r\n  { categoria: 'Consultas', valor: 3867.15 },\r\n  { categoria: 'medicamentos', valor: 2578.1 }\r\n];\r\n\r\nconst DESPESAS = 2711.9;\r\n\r\nconst Faturamento = () => {\r\n  const iconTotal = (\r\n    <i>\r\n      <img src={ic_totais} alt=\"\" />\r\n      <span className=\"total-money total-money--stacked d-none d-lg-block\">\r\n        $\r\n      </span>\r\n      <span className=\"total-money total-money--inline d-block d-lg-none\">\r\n        $\r\n      </span>\r\n    </i>\r\n  );\r\n\r\n  const items = [\r\n    { caption: 'Totais', icon: iconTotal, active: true },\r\n    { caption: 'Clientes', icon: ic_clientes }\r\n  ];\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Filter\r\n        className=\"pl-2 pl-lg-5\"\r\n        items={[\r\n          { name: 'Hoje', active: true },\r\n          'Última semana',\r\n          'Último mês',\r\n          { name: 'Outro período', className: 'd-none d-sm-inline-block' }\r\n        ]}\r\n      />\r\n      <Menu\r\n        className=\"pl-2 pl-lg-5 d-block d-lg-none\"\r\n        itemClass=\"d-inline-block menu__item--inline\"\r\n        items={items}\r\n      />\r\n      <ContentArea\r\n        className=\"pl-2 pl-lg-5\"\r\n        menu={<Menu className=\"d-none d-lg-block\" items={items} />}\r\n        content={<Totais receitas={RECEITAS} despesas={DESPESAS} />}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Faturamento;\r\n","import React from 'react';\r\n\r\nimport Menu from '../molecules/Menu';\r\nimport Breadcrumb from '../molecules/Breadcrumb';\r\nimport ContentArea from '../templates/ContentArea';\r\nimport ic_logo from '../assets/ico/ic_logo.svg';\r\nimport ic_dashboard from '../assets/ico/ic_dashboard.svg';\r\nimport ic_cadastro from '../assets/ico/ic_cadastro.svg';\r\n\r\nimport Faturamento from './Faturamento';\r\n\r\nconst App = () => (\r\n  <ContentArea\r\n    fluid\r\n    menu={\r\n      <Menu\r\n        main\r\n        icon={ic_logo}\r\n        fillActive=\"#fff\"\r\n        fillNormal=\"#049c7a\"\r\n        className=\"d-none d-lg-block\"\r\n        items={[\r\n          { caption: 'Meu Faturamento', icon: ic_dashboard, active: true },\r\n          {\r\n            caption: 'Cadastro',\r\n            icon: ic_cadastro\r\n          }\r\n        ]}\r\n      />\r\n    }\r\n    content={\r\n      <React.Fragment>\r\n        <Breadcrumb\r\n          className=\"pb-lg-4 pl-2 pl-lg-5\"\r\n          items={['Petshop', 'Meu faturamento']}\r\n        />\r\n        <Faturamento />\r\n      </React.Fragment>\r\n    }\r\n  />\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport './assets/fonts/fonts.css';\r\nimport './assets/index.scss';\r\nimport App from './pages/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/ic_menu.b77506d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_logo.00946399.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_dashboard.ff09e399.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_cadastro.db3349cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic_clientes.514fbbc2.svg\";"],"sourceRoot":""}